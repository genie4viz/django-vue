[tox]
# Make "tox" equivalent to "tox -e py35"
envlist = py35
skipsdist = true

[testenv]
skip_install = true
passenv =
    APP_DATABASE_URL
    HIKSTER_DOTENV
deps =
    pip-tools == 2.0.2
commands =
    pip-sync deps/tests.txt deps/runtime.txt
    flake8 hikster
    pytest {posargs}

[testenv:coverage]
basepython = python3.5
commands =
    pip-sync deps/tests.txt deps/runtime.txt
    flake8 hikster
    coverage run -m pytest -qq {posargs}
    coverage report

[testenv:migrations]
basepython = python3.5
envdir = {toxworkdir}/py35
setenv =
    APP_ENVIRONMENT=tests
deps =
    pip-tools == 2.0.2
commands =
    pip-sync deps/tests.txt deps/runtime.txt
    python manage.py makemigrations --dry-run --check

[testenv:pkg]
basepython = python3.5
deps = safety
commands =
    safety check --full-report -r deps/ci.txt -r deps/runtime.txt -r deps/tests.txt


# Config for dev tools (pytest etc. look for tox.ini and find their
# settings here, this is not a tox feature)

[pytest]
env =
    DJANGO_SETTINGS_MODULE=hikster_api.settings
    APP_ENVIRONMENT=tests
addopts = -svv --reuse-db
norecursedirs =
    .tox
    __pycache__
    migrations
    templates


[coverage:run]
source = hikster
branch = 1

[coverage:report]
skip_covered = 1
show_missing = 1
fail_under = 100
omit =
    hikster/hikster_api/settings.py
    hikster/*/admin.py
    hikster/*/migrations/*.py
exclude_lines =
    pragma: no cover
    if settings.DEBUG
    if settings.ENABLE_


[flake8]
max-line-length = 89
exclude = .git,.tox,__pycache__,migrations,templates
# Ignore warnings for variables starting with upper case (used for class objects),
# lambda object assigned to a name (makes tests compact)
ignore = E731,N806
show-source = True
